{
  "contractName": "HealthRecord",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "kiosk_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        }
      ],
      "name": "registerKiosk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hospital_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        }
      ],
      "name": "registerHospital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider_",
          "type": "address"
        }
      ],
      "name": "disableProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider_",
          "type": "address"
        }
      ],
      "name": "getProviderInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "endUser",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "testresult_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "temp_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "place_",
          "type": "string"
        }
      ],
      "name": "addHealthRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getHealthRecord",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "testResult_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "date_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "place_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "endUser",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "addPendingHealthRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "count_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getPendingHealthRecord",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getPendingHealthRecordLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"endUser\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"testresult_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"temp_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"place_\",\"type\":\"string\"}],\"name\":\"addHealthRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"testResult_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"date_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"place_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"endUser\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"addPendingHealthRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider_\",\"type\":\"address\"}],\"name\":\"disableProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getHealthRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getPendingHealthRecord\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getPendingHealthRecordLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider_\",\"type\":\"address\"}],\"name\":\"getProviderInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hospital_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"registerHospital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"kiosk_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"}],\"name\":\"registerKiosk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Wen/Uni_stuff/year_4/FYP/fyp-blockchain/contracts/HealthRecord.sol\":\"HealthRecord\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":0},\"remappings\":[]},\"sources\":{\"/D/Wen/Uni_stuff/year_4/FYP/fyp-blockchain/contracts/HealthRecord.sol\":{\"keccak256\":\"0x7c4900cb72cd088b48de7238402e430bf830382c307827bbe474ac75a14ea9cb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0639d11bd1de3ab691d42198b69d7f28474e71dc49cb2e4d339dc69852fc1c0f\",\"dweb:/ipfs/QmXNJifoGvBjRjsFKhprBbZH2DwPGWvvSugC9fjNgrKDmN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061212a806100606000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80632199d5cd1461009e578063427c3868146100e257806343a1489d1461021557806349d41e831461041e5780636e46b521146105905780637125b6f1146107a35780637583902f1461096f5780637b74686414610a98578063893d20e814610c0a5780638dc2fe9814610c3e578063f559b2b214610c82575b600080fd5b6100e0600480360360208110156100b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cda565b005b61012e600480360360408110156100f857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5e565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610172578082015181840152602081019050610157565b50505050905090810190601f16801561019f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156101d85780820151818401526020810190506101bd565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61041c6004803603608081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184600183028401116401000000008311171561029c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ff57600080fd5b82018360208201111561031157600080fd5b8035906020019184600183028401116401000000008311171561033357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039657600080fd5b8201836020820111156103a857600080fd5b803590602001918460018302840111640100000000831117156103ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f66565b005b61058e6004803603606081101561043457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561050857600080fd5b82018360208201111561051a57600080fd5b8035906020019184600183028401116401000000008311171561053c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110b1565b005b6107a1600480360360a08110156105a657600080fd5b81019080803590602001906401000000008111156105c357600080fd5b8201836020820111156105d557600080fd5b803590602001918460018302840111640100000000831117156105f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065a57600080fd5b82018360208201111561066c57600080fd5b8035906020019184600183028401116401000000008311171561068e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106f157600080fd5b82018360208201111561070357600080fd5b8035906020019184600183028401116401000000008311171561072557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611369565b005b6107ef600480360360408110156107b957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611570565b6040518080602001806020018060200187815260200186151581526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184810384528a818151815260200191508051906020019080838360005b83811015610861578082015181840152602081019050610846565b50505050905090810190601f16801561088e5780820380516001836020036101000a031916815260200191505b50848103835289818151815260200191508051906020019080838360005b838110156108c75780820151818401526020810190506108ac565b50505050905090810190601f1680156108f45780820380516001836020036101000a031916815260200191505b50848103825288818151815260200191508051906020019080838360005b8381101561092d578082015181840152602081019050610912565b50505050905090810190601f16801561095a5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b6109b16004803603602081101561098557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a09565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156109f55780820151818401526020810190506109da565b50505050905090810190601f168015610a225780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a5b578082015181840152602081019050610a40565b50505050905090810190601f168015610a885780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610c0860048036036060811015610aae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610aeb57600080fd5b820183602082011115610afd57600080fd5b80359060200191846001830284011164010000000083111715610b1f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b8257600080fd5b820183602082011115610b9457600080fd5b80359060200191846001830284011164010000000083111715610bb657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c2a565b005b610c12611e7a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c8060048036036020811015610c5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea3565b005b610cc460048036036020811015610c9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fc2565b6040518082815260200191505060405180910390f35b80600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018481548110610dae57fe5b9060005260206000209060060201600001600001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018581548110610e0f57fe5b9060005260206000209060060201600001600201818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f545780601f10610f2957610100808354040283529160200191610f54565b820191906000526020600020905b815481529060010190602001808311610f3757829003601f168201915b50505050509050915091509250929050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514610fc657600080fd5b60006040518060600160405280858152602001848152602001838152509050600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061106d929190612049565b50602082015181600101908051906020019061108a929190612049565b5060408201518160020190805190602001906110a7929190612049565b5050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160011515815250905080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611253929190612049565b506040820151816002019080519060200190611270929190612049565b5060608201518160030160006101000a81548160ff021916908315150217905550905050600181908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611323929190612049565b506040820151816002019080519060200190611340929190612049565b5060608201518160030160006101000a81548160ff021916908315150217905550505050505050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161515146113c957600080fd5b60006040518060600160405280878152602001868152602001858152509050600060405180608001604052808381526020016000151581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160008201518160000190805190602001906114b7929190612049565b5060208201518160010190805190602001906114d4929190612049565b5060408201518160020190805190602001906114f1929190612049565b50505060208201518160030160006101000a81548160ff0219169083151502179055506040820151816004015560608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b606080606060008060008673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b257600080fd5b600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020188815481106115ff57fe5b9060005260206000209060060201600001600001600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201898154811061166057fe5b9060005260206000209060060201600001600101600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018a815481106116c157fe5b9060005260206000209060060201600001600201600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018b8154811061172257fe5b906000526020600020906006020160040154600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c8154811061178157fe5b906000526020600020906006020160030160009054906101000a900460ff16600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018d815481106117ed57fe5b906000526020600020906006020160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118b45780601f10611889576101008083540402835291602001916118b4565b820191906000526020600020905b81548152906001019060200180831161189757829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119505780601f1061192557610100808354040283529160200191611950565b820191906000526020600020905b81548152906001019060200180831161193357829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119ec5780601f106119c1576101008083540402835291602001916119ec565b820191906000526020600020905b8154815290600101906020018083116119cf57829003601f168201915b505050505093509550955095509550955095509295509295509295565b606080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611a6557600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b7e5780601f10611b5357610100808354040283529160200191611b7e565b820191906000526020600020905b815481529060010190602001808311611b6157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c1a5780601f10611bef57610100808354040283529160200191611c1a565b820191906000526020600020905b815481529060010190602001808311611bfd57829003601f168201915b5050505050905091509150915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b82600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190611dc2929190612049565b5080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190611e19929190612049565b506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ffc57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805490509050919050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261207f57600085556120c6565b82601f1061209857805160ff19168380011785556120c6565b828001600101855582156120c6579182015b828111156120c55782518255916020019190600101906120aa565b5b5090506120d391906120d7565b5090565b5b808211156120f05760008160009055506001016120d8565b509056fea2646970667358221220ef1c5b17a4abcb96edd84b3f818c85592d0ac30d476c8aef1c3132df53bcf7ae64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c80632199d5cd1461009e578063427c3868146100e257806343a1489d1461021557806349d41e831461041e5780636e46b521146105905780637125b6f1146107a35780637583902f1461096f5780637b74686414610a98578063893d20e814610c0a5780638dc2fe9814610c3e578063f559b2b214610c82575b600080fd5b6100e0600480360360208110156100b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cda565b005b61012e600480360360408110156100f857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5e565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610172578082015181840152602081019050610157565b50505050905090810190601f16801561019f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156101d85780820151818401526020810190506101bd565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61041c6004803603608081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184600183028401116401000000008311171561029c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ff57600080fd5b82018360208201111561031157600080fd5b8035906020019184600183028401116401000000008311171561033357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561039657600080fd5b8201836020820111156103a857600080fd5b803590602001918460018302840111640100000000831117156103ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f66565b005b61058e6004803603606081101561043457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561050857600080fd5b82018360208201111561051a57600080fd5b8035906020019184600183028401116401000000008311171561053c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110b1565b005b6107a1600480360360a08110156105a657600080fd5b81019080803590602001906401000000008111156105c357600080fd5b8201836020820111156105d557600080fd5b803590602001918460018302840111640100000000831117156105f757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561065a57600080fd5b82018360208201111561066c57600080fd5b8035906020019184600183028401116401000000008311171561068e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106f157600080fd5b82018360208201111561070357600080fd5b8035906020019184600183028401116401000000008311171561072557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611369565b005b6107ef600480360360408110156107b957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611570565b6040518080602001806020018060200187815260200186151581526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184810384528a818151815260200191508051906020019080838360005b83811015610861578082015181840152602081019050610846565b50505050905090810190601f16801561088e5780820380516001836020036101000a031916815260200191505b50848103835289818151815260200191508051906020019080838360005b838110156108c75780820151818401526020810190506108ac565b50505050905090810190601f1680156108f45780820380516001836020036101000a031916815260200191505b50848103825288818151815260200191508051906020019080838360005b8381101561092d578082015181840152602081019050610912565b50505050905090810190601f16801561095a5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b6109b16004803603602081101561098557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a09565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156109f55780820151818401526020810190506109da565b50505050905090810190601f168015610a225780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a5b578082015181840152602081019050610a40565b50505050905090810190601f168015610a885780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610c0860048036036060811015610aae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610aeb57600080fd5b820183602082011115610afd57600080fd5b80359060200191846001830284011164010000000083111715610b1f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610b8257600080fd5b820183602082011115610b9457600080fd5b80359060200191846001830284011164010000000083111715610bb657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c2a565b005b610c12611e7a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610c8060048036036020811015610c5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea3565b005b610cc460048036036020811015610c9857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fc2565b6040518082815260200191505060405180910390f35b80600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018481548110610dae57fe5b9060005260206000209060060201600001600001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018581548110610e0f57fe5b9060005260206000209060060201600001600201818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f545780601f10610f2957610100808354040283529160200191610f54565b820191906000526020600020905b815481529060010190602001808311610f3757829003601f168201915b50505050509050915091509250929050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16151514610fc657600080fd5b60006040518060600160405280858152602001848152602001838152509050600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061106d929190612049565b50602082015181600101908051906020019061108a929190612049565b5060408201518160020190805190602001906110a7929190612049565b5050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b600060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160011515815250905080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611253929190612049565b506040820151816002019080519060200190611270929190612049565b5060608201518160030160006101000a81548160ff021916908315150217905550905050600181908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611323929190612049565b506040820151816002019080519060200190611340929190612049565b5060608201518160030160006101000a81548160ff021916908315150217905550505050505050565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161515146113c957600080fd5b60006040518060600160405280878152602001868152602001858152509050600060405180608001604052808381526020016000151581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160008201518160000190805190602001906114b7929190612049565b5060208201518160010190805190602001906114d4929190612049565b5060408201518160020190805190602001906114f1929190612049565b50505060208201518160030160006101000a81548160ff0219169083151502179055506040820151816004015560608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b606080606060008060008673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b257600080fd5b600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020188815481106115ff57fe5b9060005260206000209060060201600001600001600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201898154811061166057fe5b9060005260206000209060060201600001600101600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018a815481106116c157fe5b9060005260206000209060060201600001600201600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018b8154811061172257fe5b906000526020600020906006020160040154600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018c8154811061178157fe5b906000526020600020906006020160030160009054906101000a900460ff16600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018d815481106117ed57fe5b906000526020600020906006020160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118b45780601f10611889576101008083540402835291602001916118b4565b820191906000526020600020905b81548152906001019060200180831161189757829003601f168201915b50505050509550848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119505780601f1061192557610100808354040283529160200191611950565b820191906000526020600020905b81548152906001019060200180831161193357829003601f168201915b50505050509450838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119ec5780601f106119c1576101008083540402835291602001916119ec565b820191906000526020600020905b8154815290600101906020018083116119cf57829003601f168201915b505050505093509550955095509550955095509295509295509295565b606080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16611a6557600080fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b7e5780601f10611b5357610100808354040283529160200191611b7e565b820191906000526020600020905b815481529060010190602001808311611b6157829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c1a5780601f10611bef57610100808354040283529160200191611c1a565b820191906000526020600020905b815481529060010190602001808311611bfd57829003601f168201915b5050505050905091509150915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ceb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b82600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190611dc2929190612049565b5080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002019080519060200190611e19929190612049565b506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611f64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e81525060200191505060405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff02191690831515021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ffc57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201805490509050919050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261207f57600085556120c6565b82601f1061209857805160ff19168380011785556120c6565b828001600101855582156120c6579182015b828111156120c55782518255916020019190600101906120aa565b5b5090506120d391906120d7565b5090565b5b808211156120f05760008160009055506001016120d8565b509056fea2646970667358221220ef1c5b17a4abcb96edd84b3f818c85592d0ac30d476c8aef1c3132df53bcf7ae64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "73:4658:0:-:0;;;1132:59;;;;;;;;;;1173:10;1157:13;;:26;;;;;;;;;;;;;;;;;;73:4658;;;;;;",
  "deployedSourceMap": "73:4658:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2992:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::ii;:::-;;1761:347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3268:473;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3779:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4615:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2120:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4409:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1220:145;1342:5;1315;:12;1321:5;1315:12;;;;;;;;;;;;;;;:24;;;:32;;;;;;;;;;;;;;;;;;1220:145;:::o;2992:234::-;3066:13;3082;3115:5;:12;3121:5;3115:12;;;;;;;;;;;;;;;:26;;3142:6;3115:34;;;;;;;;;;;;;;;;;;:41;;:52;;3169:5;:12;3175:5;3169:12;;;;;;;;;;;;;;;:26;;3196:6;3169:34;;;;;;;;;;;;;;;;;;:41;;:47;;3107:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2992:234;;;;;:::o;2647:307::-;2817:4;2784:37;;:8;:20;2793:10;2784:20;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;2776:46;;;;;;2833:25;2861:38;;;;;;;;2872:11;2861:38;;;;2885:5;2861:38;;;;2892:6;2861:38;;;2833:66;;2910:5;:14;2916:7;2910:14;;;;;;;;;;;;;;;:22;;2938:7;2910:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2647:307;;;;;:::o;1761:347::-;1891:13;;;;;;;;;;1877:27;;:10;:27;;;1869:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:25;1980:47;;;;;;;;1993:9;1980:47;;;;;;2004:9;1980:47;;;;2015:5;1980:47;;;;2022:4;1980:47;;;;;1952:75;;2060:5;2038:8;:19;2047:9;2038:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:12;2094:5;2076:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1761:347;;;;:::o;3268:473::-;3463:4;3430:37;;:8;:20;3439:10;3430:20;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;3422:47;;;;;;3480:28;3511:38;;;;;;;;3522:11;3511:38;;;;3535:5;3511:38;;;;3542:6;3511:38;;;3480:69;;3560:40;3603:58;;;;;;;;3622:10;3603:58;;;;3634:5;3603:58;;;;;;3641:7;3603:58;;;;3650:10;3603:58;;;;;3560:101;;3672:5;:14;3678:7;3672:14;;;;;;;;;;;;;;;:28;;3706:14;3672:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:473;;;;;;;:::o;3779:612::-;3859:13;3874;3889;3904:7;3913:4;3919:7;3962:5;3948:19;;:10;:19;;;3940:28;;;;;;3987:5;:12;3993:5;3987:12;;;;;;;;;;;;;;;:26;;4014:6;3987:34;;;;;;;;;;;;;;;;;;:41;;:52;;4059:5;:12;4065:5;4059:12;;;;;;;;;;;;;;;:26;;4086:6;4059:34;;;;;;;;;;;;;;;;;;:41;;:46;;4126:5;:12;4132:5;4126:12;;;;;;;;;;;;;;;:26;;4153:6;4126:34;;;;;;;;;;;;;;;;;;:41;;:47;;4192:5;:12;4198:5;4192:12;;;;;;;;;;;;;;;:26;;4219:6;4192:34;;;;;;;;;;;;;;;;;;:41;;;4252:5;:12;4258:5;4252:12;;;;;;;;;;;;;;;:26;;4279:6;4252:34;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;4310:5;:12;4316:5;4310:12;;;;;;;;;;;;;;;:26;;4337:6;4310:34;;;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;3979:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3779:612;;;;;;;;:::o;2324:278::-;2388:13;2403;2436:8;:19;2445:9;2436:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;2428:37;;;;;;2497:8;:19;2506:9;2497:19;;;;;;;;;;;;;;;:29;;2541:8;:19;2550:9;2541:19;;;;;;;;;;;;;;;:28;;2476:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:278;;;:::o;1383:366::-;1507:13;;;;;;;;;;1493:27;;:10;:27;;;1485:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:6;1568:8;:16;1577:6;1568:16;;;;;;;;;;;;;;;:28;;;:37;;;;;;;;;;;;;;;;;;1644:9;1616:8;:16;1625:6;1616:16;;;;;;;;;;;;;;;:25;;:37;;;;;;;;;;;;:::i;:::-;;1693:5;1664:8;:16;1673:6;1664:16;;;;;;;;;;;;;;;:26;;:34;;;;;;;;;;;;:::i;:::-;;1737:4;1709:8;:16;1718:6;1709:16;;;;;;;;;;;;;;;:25;;;:32;;;;;;;;;;;;;;;;;;1383:366;;;:::o;4615:89::-;4656:7;4682:13;;;;;;;;;;;4675:21;;4615:89;:::o;2120:188::-;2203:13;;;;;;;;;;2189:27;;:10;:27;;;2181:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2295:5;2264:8;:19;2273:9;2264:19;;;;;;;;;;;;;;;:28;;;:36;;;;;;;;;;;;;;;;;;2120:188;:::o;4409:182::-;4484:7;4525:5;4511:19;;:10;:19;;;4503:28;;;;;;4549:5;:12;4555:5;4549:12;;;;;;;;;;;;;;;:26;;:33;;;;4542:41;;4409:182;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <=0.8.3;\r\n\r\ncontract HealthRecord{\r\n    \r\n    address private contractOwner;\r\n    \r\n    struct UserResult{\r\n        string testResult;\r\n        string date;\r\n        string place;\r\n    }\r\n    \r\n    struct PendingTransaction{\r\n        UserResult result;\r\n        bool paid;\r\n        uint256 amount;\r\n        address payableTo;\r\n        \r\n    }\r\n    \r\n    struct User{\r\n        address userAddress;\r\n        UserResult[] results;\r\n        PendingTransaction[] pendingResult;\r\n    }\r\n    \r\n    struct ProviderUser{\r\n        address userAddress;\r\n        string location;\r\n        string placeName;\r\n        bool isActive;\r\n        \r\n    }\r\n    \r\n    // struct HospitalUser{\r\n    //     address userAddress;\r\n    //     string location;\r\n    //     string placeName;\r\n    //     bool isActive;\r\n    // }\r\n    \r\n    ProviderUser[] private hospitalList; // just a list \r\n   // mapping (address => HospitalUser) private hospital;\r\n    mapping (address => ProviderUser) private provider;\r\n    mapping (address  => User) private users; // maybe change to private\r\n    \r\n    \r\n    constructor (){\r\n        contractOwner = msg.sender;\r\n    }\r\n    \r\n    //add users\r\n    function registerUser(address user_) public{\r\n       // require(msg.sender == user_);\r\n        users[user_].userAddress = user_;\r\n        \r\n    }\r\n    \r\n    \r\n    function registerKiosk(address kiosk_, string memory location_, string memory name_) public{\r\n        require(msg.sender == contractOwner, \"Only contract owner can do this.\");\r\n        provider[kiosk_].userAddress = kiosk_;\r\n        provider[kiosk_].location = location_;\r\n        provider[kiosk_].placeName = name_;\r\n        provider[kiosk_].isActive = true;\r\n    }\r\n    \r\n    function registerHospital(address hospital_, string memory location_, string memory name_) public{\r\n        require(msg.sender == contractOwner, \"Only contract owner can do this.\");\r\n        ProviderUser memory hUser = ProviderUser(hospital_, location_, name_, true);\r\n        provider[hospital_] = hUser;\r\n        hospitalList.push(hUser);\r\n    }\r\n    \r\n    function disableProvider(address provider_) public{\r\n        require(msg.sender == contractOwner, \"Only contract owner can do this.\");\r\n        provider[provider_].isActive = false;\r\n    }\r\n  \r\n    \r\n    function getProviderInfo(address provider_) public view returns(string memory, string memory){\r\n        require(provider[provider_].isActive);\r\n        return(\r\n            provider[provider_].placeName,\r\n            provider[provider_].location\r\n            );\r\n        \r\n    }\r\n    \r\n    \r\n    //add record as kiosk\r\n    function addHealthRecord(address endUser, string memory testresult_, string memory temp_, string memory place_) public{\r\n        require(provider[msg.sender].isActive == true);\r\n        UserResult memory result_ = UserResult(testresult_, temp_, place_);\r\n        users[endUser].results.push(result_);\r\n    }\r\n    \r\n    //get record as user\r\n    function getHealthRecord(uint count_ , address user_) public view returns(string memory , string memory){\r\n        return (users[user_].pendingResult[count_].result.testResult, users[user_].pendingResult[count_].result.place );\r\n    }\r\n    \r\n    \r\n    //add transaction \r\n    function addPendingHealthRecord(string memory testResult_, string memory date_, string memory place_ , address endUser, uint256 amount_) public{\r\n        require(provider[msg.sender].isActive == true );\r\n        UserResult memory resultData = UserResult(testResult_, date_, place_);\r\n        PendingTransaction memory pendingResult_ = PendingTransaction(resultData, false, amount_, msg.sender);\r\n        users[endUser].pendingResult.push(pendingResult_);\r\n        \r\n\r\n    }\r\n    \r\n    //get record as user\r\n    function getPendingHealthRecord(uint count_, address user_) public view returns(string memory, string memory, string memory, uint256, bool, address  ){\r\n        require(msg.sender == user_);\r\n        return (users[user_].pendingResult[count_].result.testResult, \r\n                users[user_].pendingResult[count_].result.date , \r\n                users[user_].pendingResult[count_].result.place,\r\n                users[user_].pendingResult[count_].amount,\r\n                users[user_].pendingResult[count_].paid,\r\n                users[user_].pendingResult[count_].payableTo\r\n                \r\n        );\r\n    }\r\n    \r\n    \r\n    function getPendingHealthRecordLength (address user_) public view returns (uint256){\r\n        require(msg.sender == user_);\r\n        return(users[user_].pendingResult.length);\r\n    }\r\n    \r\n    \r\n    \r\n    function getOwner() public view returns (address){\r\n        return(contractOwner);\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n}",
  "sourcePath": "D:/Wen/Uni_stuff/year_4/FYP/fyp-blockchain/contracts/HealthRecord.sol",
  "ast": {
    "absolutePath": "/D/Wen/Uni_stuff/year_4/FYP/fyp-blockchain/contracts/HealthRecord.sol",
    "exportedSymbols": {
      "HealthRecord": [
        427
      ]
    },
    "id": 428,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<=",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 427,
        "linearizedBaseContracts": [
          427
        ],
        "name": "HealthRecord",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "107:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "107:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "HealthRecord.UserResult",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "testResult",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "177:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 4,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "177:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "205:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "205:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "place",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "227:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "227:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserResult",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "149:98:0",
            "visibility": "public"
          },
          {
            "canonicalName": "HealthRecord.PendingTransaction",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "result",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "295:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserResult_$10_storage_ptr",
                  "typeString": "struct HealthRecord.UserResult"
                },
                "typeName": {
                  "id": 11,
                  "name": "UserResult",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 10,
                  "src": "295:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserResult_$10_storage_ptr",
                    "typeString": "struct HealthRecord.UserResult"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "paid",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "323:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "323:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "343:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "343:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "payableTo",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "368:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 17,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "368:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PendingTransaction",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "259:144:0",
            "visibility": "public"
          },
          {
            "canonicalName": "HealthRecord.User",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "437:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "437:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "results",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "467:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_UserResult_$10_storage_$dyn_storage_ptr",
                  "typeString": "struct HealthRecord.UserResult[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 22,
                    "name": "UserResult",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10,
                    "src": "467:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserResult_$10_storage_ptr",
                      "typeString": "struct HealthRecord.UserResult"
                    }
                  },
                  "id": 23,
                  "nodeType": "ArrayTypeName",
                  "src": "467:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserResult_$10_storage_$dyn_storage_ptr",
                    "typeString": "struct HealthRecord.UserResult[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "pendingResult",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "498:34:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage_ptr",
                  "typeString": "struct HealthRecord.PendingTransaction[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 25,
                    "name": "PendingTransaction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19,
                    "src": "498:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PendingTransaction_$19_storage_ptr",
                      "typeString": "struct HealthRecord.PendingTransaction"
                    }
                  },
                  "id": 26,
                  "nodeType": "ArrayTypeName",
                  "src": "498:20:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage_ptr",
                    "typeString": "struct HealthRecord.PendingTransaction[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "415:125:0",
            "visibility": "public"
          },
          {
            "canonicalName": "HealthRecord.ProviderUser",
            "id": 37,
            "members": [
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "582:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "582:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "location",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "612:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 31,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "placeName",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "638:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 33,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "638:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "isActive",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "665:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 35,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "665:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProviderUser",
            "nodeType": "StructDefinition",
            "scope": 427,
            "src": "552:144:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "hospitalList",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "872:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_ProviderUser_$37_storage_$dyn_storage",
              "typeString": "struct HealthRecord.ProviderUser[]"
            },
            "typeName": {
              "baseType": {
                "id": 38,
                "name": "ProviderUser",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "872:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProviderUser_$37_storage_ptr",
                  "typeString": "struct HealthRecord.ProviderUser"
                }
              },
              "id": 39,
              "nodeType": "ArrayTypeName",
              "src": "872:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_ProviderUser_$37_storage_$dyn_storage_ptr",
                "typeString": "struct HealthRecord.ProviderUser[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "provider",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "989:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
              "typeString": "mapping(address => struct HealthRecord.ProviderUser)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "989:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                "typeString": "mapping(address => struct HealthRecord.ProviderUser)"
              },
              "valueType": {
                "id": 42,
                "name": "ProviderUser",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "1009:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProviderUser_$37_storage_ptr",
                  "typeString": "struct HealthRecord.ProviderUser"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 427,
            "src": "1046:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
              "typeString": "mapping(address => struct HealthRecord.User)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1055:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1046:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                "typeString": "mapping(address => struct HealthRecord.User)"
              },
              "valueType": {
                "id": 46,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 28,
                "src": "1067:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$28_storage_ptr",
                  "typeString": "struct HealthRecord.User"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1146:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1157:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1173:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1173:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1157:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:26:0"
                }
              ]
            },
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:0"
            },
            "scope": 427,
            "src": "1132:59:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1263:102:0",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 62,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1315:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                          }
                        },
                        "id": 64,
                        "indexExpression": {
                          "id": 63,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1321:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1315:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$28_storage",
                          "typeString": "struct HealthRecord.User storage ref"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1315:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "user_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1342:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1315:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:32:0"
                }
              ]
            },
            "functionSelector": "2199d5cd",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "user_",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1242:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:15:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:0"
            },
            "scope": 427,
            "src": "1220:145:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1474:275:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1493:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1493:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 82,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1507:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1493:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1522:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        },
                        "value": "Only contract owner can do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1485:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:72:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 87,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1568:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                          }
                        },
                        "id": 89,
                        "indexExpression": {
                          "id": 88,
                          "name": "kiosk_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1577:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1568:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1568:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91,
                      "name": "kiosk_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1599:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1568:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:37:0"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 94,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1616:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                          }
                        },
                        "id": 96,
                        "indexExpression": {
                          "id": 95,
                          "name": "kiosk_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1625:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1616:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "location",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "1616:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "location_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1644:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1616:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:37:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1664:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "id": 102,
                          "name": "kiosk_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1673:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1664:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "placeName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "1664:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1693:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1664:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:34:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 108,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1709:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                          }
                        },
                        "id": 110,
                        "indexExpression": {
                          "id": 109,
                          "name": "kiosk_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1718:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1709:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "1709:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1737:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1709:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:32:0"
                }
              ]
            },
            "functionSelector": "7b746864",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerKiosk",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "kiosk_",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1406:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "location_",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1422:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1447:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:62:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:0:0"
            },
            "scope": 427,
            "src": "1383:366:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1858:250:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1877:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1877:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1891:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1877:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        },
                        "value": "Only contract owner can do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1869:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:72:0"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "hUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1952:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                        "typeString": "struct HealthRecord.ProviderUser"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "ProviderUser",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37,
                        "src": "1952:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage_ptr",
                          "typeString": "struct HealthRecord.ProviderUser"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 141,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 136,
                        "name": "hospital_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1993:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 137,
                        "name": "location_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2004:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 138,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2015:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135,
                      "name": "ProviderUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1980:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ProviderUser_$37_storage_ptr_$",
                        "typeString": "type(struct HealthRecord.ProviderUser storage pointer)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                      "typeString": "struct HealthRecord.ProviderUser memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1952:75:0"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 142,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2038:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                          "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                        }
                      },
                      "id": 144,
                      "indexExpression": {
                        "id": 143,
                        "name": "hospital_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2047:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2038:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                        "typeString": "struct HealthRecord.ProviderUser storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 145,
                      "name": "hUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2060:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                        "typeString": "struct HealthRecord.ProviderUser memory"
                      }
                    },
                    "src": "2038:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                      "typeString": "struct HealthRecord.ProviderUser storage ref"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151,
                        "name": "hUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2094:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                          "typeString": "struct HealthRecord.ProviderUser memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                          "typeString": "struct HealthRecord.ProviderUser memory"
                        }
                      ],
                      "expression": {
                        "id": 148,
                        "name": "hospitalList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2076:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ProviderUser_$37_storage_$dyn_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref[] storage ref"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2076:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ProviderUser_$37_storage_$returns$__$",
                        "typeString": "function (struct HealthRecord.ProviderUser storage ref)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:24:0"
                }
              ]
            },
            "functionSelector": "49d41e83",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerHospital",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "hospital_",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1787:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "location_",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1806:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1831:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1786:65:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:0:0"
            },
            "scope": 427,
            "src": "1761:347:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2170:138:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2189:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2189:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 163,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "2203:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2189:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2218:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        },
                        "value": "Only contract owner can do this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                          "typeString": "literal_string \"Only contract owner can do this.\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2181:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:72:0"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 168,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2264:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                            "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                          }
                        },
                        "id": 170,
                        "indexExpression": {
                          "id": 169,
                          "name": "provider_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "2273:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2264:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                          "typeString": "struct HealthRecord.ProviderUser storage ref"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isActive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2264:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2295:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2264:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:36:0"
                }
              ]
            },
            "functionSelector": "8dc2fe98",
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableProvider",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "provider_",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "2145:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:19:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:0:0"
            },
            "scope": 427,
            "src": "2120:188:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "2417:185:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 186,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2436:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                              "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                            }
                          },
                          "id": 188,
                          "indexExpression": {
                            "id": 187,
                            "name": "provider_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "2445:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2436:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                            "typeString": "struct HealthRecord.ProviderUser storage ref"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isActive",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "2436:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:37:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 192,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2497:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                              "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                            }
                          },
                          "id": 194,
                          "indexExpression": {
                            "id": 193,
                            "name": "provider_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "2506:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2497:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                            "typeString": "struct HealthRecord.ProviderUser storage ref"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "placeName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34,
                        "src": "2497:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 196,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "2541:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                              "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                            }
                          },
                          "id": 198,
                          "indexExpression": {
                            "id": 197,
                            "name": "provider_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "2550:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2541:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                            "typeString": "struct HealthRecord.ProviderUser storage ref"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "location",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "2541:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 200,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2482:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 184,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "2476:108:0"
                }
              ]
            },
            "functionSelector": "7583902f",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProviderInfo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "provider_",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2349:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2348:19:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2388:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2403:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2387:30:0"
            },
            "scope": 427,
            "src": "2324:278:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2765:189:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 215,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "2784:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                                "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                              }
                            },
                            "id": 218,
                            "indexExpression": {
                              "expression": {
                                "id": 216,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2793:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2793:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2784:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                              "typeString": "struct HealthRecord.ProviderUser storage ref"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "2784:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2817:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2784:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:46:0"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "result_",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "2833:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                        "typeString": "struct HealthRecord.UserResult"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "UserResult",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10,
                        "src": "2833:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserResult_$10_storage_ptr",
                          "typeString": "struct HealthRecord.UserResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "testresult_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2872:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 228,
                        "name": "temp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "2885:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 229,
                        "name": "place_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2892:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 226,
                      "name": "UserResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2861:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserResult_$10_storage_ptr_$",
                        "typeString": "type(struct HealthRecord.UserResult storage pointer)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                      "typeString": "struct HealthRecord.UserResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2833:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "result_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "2938:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                          "typeString": "struct HealthRecord.UserResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                          "typeString": "struct HealthRecord.UserResult memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "2910:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                              "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "endUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2916:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2910:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$28_storage",
                            "typeString": "struct HealthRecord.User storage ref"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "results",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2910:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UserResult_$10_storage_$dyn_storage",
                          "typeString": "struct HealthRecord.UserResult storage ref[] storage ref"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2910:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_UserResult_$10_storage_$returns$__$",
                        "typeString": "function (struct HealthRecord.UserResult storage ref)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:36:0"
                }
              ]
            },
            "functionSelector": "43a1489d",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addHealthRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "endUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2672:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "testresult_",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2689:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "temp_",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2716:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "place_",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2737:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2671:87:0"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2765:0:0"
            },
            "scope": 427,
            "src": "2647:307:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "3096:130:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 252,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3115:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                    "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                  }
                                },
                                "id": 254,
                                "indexExpression": {
                                  "id": 253,
                                  "name": "user_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 245,
                                  "src": "3121:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3115:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$28_storage",
                                  "typeString": "struct HealthRecord.User storage ref"
                                }
                              },
                              "id": 255,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pendingResult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "3115:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                                "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "id": 256,
                              "name": "count_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "3142:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3115:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "result",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "3115:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserResult_$10_storage",
                            "typeString": "struct HealthRecord.UserResult storage ref"
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "testResult",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "3115:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 260,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3169:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                    "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                  }
                                },
                                "id": 262,
                                "indexExpression": {
                                  "id": 261,
                                  "name": "user_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 245,
                                  "src": "3175:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3169:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$28_storage",
                                  "typeString": "struct HealthRecord.User storage ref"
                                }
                              },
                              "id": 263,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pendingResult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "3169:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                                "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                              }
                            },
                            "id": 265,
                            "indexExpression": {
                              "id": 264,
                              "name": "count_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "3196:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3169:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "result",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "3169:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserResult_$10_storage",
                            "typeString": "struct HealthRecord.UserResult storage ref"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "place",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "3169:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 268,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3114:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 269,
                  "nodeType": "Return",
                  "src": "3107:111:0"
                }
              ]
            },
            "functionSelector": "427c3868",
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHealthRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "count_",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "3017:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "user_",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "3031:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:29:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "3066:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 271,
                  "src": "3082:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3065:31:0"
            },
            "scope": 427,
            "src": "2992:234:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "3411:330:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 285,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "3430:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProviderUser_$37_storage_$",
                                "typeString": "mapping(address => struct HealthRecord.ProviderUser storage ref)"
                              }
                            },
                            "id": 288,
                            "indexExpression": {
                              "expression": {
                                "id": 286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3439:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3439:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3430:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProviderUser_$37_storage",
                              "typeString": "struct HealthRecord.ProviderUser storage ref"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isActive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "3430:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3430:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3422:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:47:0"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "resultData",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "3480:28:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                        "typeString": "struct HealthRecord.UserResult"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "UserResult",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10,
                        "src": "3480:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserResult_$10_storage_ptr",
                          "typeString": "struct HealthRecord.UserResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 297,
                        "name": "testResult_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "3522:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 298,
                        "name": "date_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3535:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 299,
                        "name": "place_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "3542:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 296,
                      "name": "UserResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3511:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_UserResult_$10_storage_ptr_$",
                        "typeString": "type(struct HealthRecord.UserResult storage pointer)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                      "typeString": "struct HealthRecord.UserResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3480:69:0"
                },
                {
                  "assignments": [
                    303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 303,
                      "mutability": "mutable",
                      "name": "pendingResult_",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "3560:40:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PendingTransaction_$19_memory_ptr",
                        "typeString": "struct HealthRecord.PendingTransaction"
                      },
                      "typeName": {
                        "id": 302,
                        "name": "PendingTransaction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19,
                        "src": "3560:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PendingTransaction_$19_storage_ptr",
                          "typeString": "struct HealthRecord.PendingTransaction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 305,
                        "name": "resultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "3622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                          "typeString": "struct HealthRecord.UserResult memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3634:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 307,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3641:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3650:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3650:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                          "typeString": "struct HealthRecord.UserResult memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 304,
                      "name": "PendingTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3603:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_PendingTransaction_$19_storage_ptr_$",
                        "typeString": "type(struct HealthRecord.PendingTransaction storage pointer)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3603:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PendingTransaction_$19_memory_ptr",
                      "typeString": "struct HealthRecord.PendingTransaction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3560:101:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 317,
                        "name": "pendingResult_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "3706:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PendingTransaction_$19_memory_ptr",
                          "typeString": "struct HealthRecord.PendingTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PendingTransaction_$19_memory_ptr",
                          "typeString": "struct HealthRecord.PendingTransaction memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 312,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3672:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                              "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                            }
                          },
                          "id": 314,
                          "indexExpression": {
                            "id": 313,
                            "name": "endUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3678:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3672:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$28_storage",
                            "typeString": "struct HealthRecord.User storage ref"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pendingResult",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "3672:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                          "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3672:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PendingTransaction_$19_storage_$returns$__$",
                        "typeString": "function (struct HealthRecord.PendingTransaction storage ref)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3672:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:49:0"
                }
              ]
            },
            "functionSelector": "6e46b521",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPendingHealthRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "testResult_",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3300:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "date_",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3327:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "place_",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3348:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "endUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3371:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3371:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "3388:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3299:105:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3411:0:0"
            },
            "scope": 427,
            "src": "3268:473:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3929:462:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 341,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3948:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3948:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 343,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 325,
                          "src": "3962:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3948:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3940:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:28:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 347,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "3987:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                    "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                  }
                                },
                                "id": 349,
                                "indexExpression": {
                                  "id": 348,
                                  "name": "user_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "3993:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3987:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$28_storage",
                                  "typeString": "struct HealthRecord.User storage ref"
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pendingResult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "3987:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                                "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                              }
                            },
                            "id": 352,
                            "indexExpression": {
                              "id": 351,
                              "name": "count_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "4014:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3987:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "result",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "3987:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserResult_$10_storage",
                            "typeString": "struct HealthRecord.UserResult storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "testResult",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "3987:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 355,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "4059:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                    "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                  }
                                },
                                "id": 357,
                                "indexExpression": {
                                  "id": 356,
                                  "name": "user_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "4065:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4059:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$28_storage",
                                  "typeString": "struct HealthRecord.User storage ref"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pendingResult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "4059:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                                "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                              }
                            },
                            "id": 360,
                            "indexExpression": {
                              "id": 359,
                              "name": "count_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "4086:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4059:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "result",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "4059:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserResult_$10_storage",
                            "typeString": "struct HealthRecord.UserResult storage ref"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "date",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "4059:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 363,
                                  "name": "users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "4126:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                    "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                  }
                                },
                                "id": 365,
                                "indexExpression": {
                                  "id": 364,
                                  "name": "user_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 325,
                                  "src": "4132:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4126:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$28_storage",
                                  "typeString": "struct HealthRecord.User storage ref"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pendingResult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "4126:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                                "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                              }
                            },
                            "id": 368,
                            "indexExpression": {
                              "id": 367,
                              "name": "count_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "4153:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4126:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "result",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "4126:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserResult_$10_storage",
                            "typeString": "struct HealthRecord.UserResult storage ref"
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "place",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "4126:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 371,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4192:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                  "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                }
                              },
                              "id": 373,
                              "indexExpression": {
                                "id": 372,
                                "name": "user_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "4198:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4192:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$28_storage",
                                "typeString": "struct HealthRecord.User storage ref"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pendingResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "4192:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                            }
                          },
                          "id": 376,
                          "indexExpression": {
                            "id": 375,
                            "name": "count_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "4219:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4192:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                            "typeString": "struct HealthRecord.PendingTransaction storage ref"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "4192:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 378,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4252:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                  "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                }
                              },
                              "id": 380,
                              "indexExpression": {
                                "id": 379,
                                "name": "user_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "4258:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4252:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$28_storage",
                                "typeString": "struct HealthRecord.User storage ref"
                              }
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pendingResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "4252:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                            }
                          },
                          "id": 383,
                          "indexExpression": {
                            "id": 382,
                            "name": "count_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "4279:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4252:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                            "typeString": "struct HealthRecord.PendingTransaction storage ref"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14,
                        "src": "4252:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 385,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48,
                                "src": "4310:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                  "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                                }
                              },
                              "id": 387,
                              "indexExpression": {
                                "id": 386,
                                "name": "user_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 325,
                                "src": "4316:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4310:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$28_storage",
                                "typeString": "struct HealthRecord.User storage ref"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pendingResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "4310:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                              "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                            }
                          },
                          "id": 390,
                          "indexExpression": {
                            "id": 389,
                            "name": "count_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "4337:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PendingTransaction_$19_storage",
                            "typeString": "struct HealthRecord.PendingTransaction storage ref"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "payableTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "4310:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 392,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3986:397:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_bool_$_t_address_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,uint256,bool,address)"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "3979:404:0"
                }
              ]
            },
            "functionSelector": "7125b6f1",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingHealthRecord",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "count_",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3811:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "user_",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3824:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3824:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3810:28:0"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3859:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3874:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3889:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3904:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3913:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3919:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3919:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:71:0"
            },
            "scope": 427,
            "src": "3779:612:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "4492:99:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 403,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4511:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4511:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 405,
                          "name": "user_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "4525:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4511:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:28:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 409,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "4549:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$28_storage_$",
                                "typeString": "mapping(address => struct HealthRecord.User storage ref)"
                              }
                            },
                            "id": 411,
                            "indexExpression": {
                              "id": 410,
                              "name": "user_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "4555:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4549:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$28_storage",
                              "typeString": "struct HealthRecord.User storage ref"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pendingResult",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "4549:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PendingTransaction_$19_storage_$dyn_storage",
                            "typeString": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4549:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 414,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4548:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 401,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "4542:41:0"
                }
              ]
            },
            "functionSelector": "f559b2b2",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingHealthRecordLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "user_",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4448:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:15:0"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "4484:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4483:9:0"
            },
            "scope": 427,
            "src": "4409:182:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "4664:40:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 422,
                        "name": "contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "4682:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 423,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4681:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 421,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "4675:21:0"
                }
              ]
            },
            "functionSelector": "893d20e8",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4632:2:0"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "4656:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4656:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4655:9:0"
            },
            "scope": 427,
            "src": "4615:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 428,
        "src": "73:4658:0"
      }
    ],
    "src": "37:4694:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/Wen/Uni_stuff/year_4/FYP/fyp-blockchain/contracts/HealthRecord.sol",
      "exportedSymbols": {
        "HealthRecord": [
          427
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0",
            "<=",
            "0.8",
            ".3"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "37:32:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            427
          ],
          "name": "HealthRecord",
          "scope": 428
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "contractOwner",
              "scope": 427,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "107:7:0"
              }
            ],
            "id": 3,
            "name": "VariableDeclaration",
            "src": "107:29:0"
          },
          {
            "attributes": {
              "canonicalName": "HealthRecord.UserResult",
              "name": "UserResult",
              "scope": 427,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "testResult",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "177:6:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "177:17:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "date",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "205:6:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "205:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "place",
                  "scope": 10,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "227:6:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "227:12:0"
              }
            ],
            "id": 10,
            "name": "StructDefinition",
            "src": "149:98:0"
          },
          {
            "attributes": {
              "canonicalName": "HealthRecord.PendingTransaction",
              "name": "PendingTransaction",
              "scope": 427,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "result",
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct HealthRecord.UserResult",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "UserResult",
                      "referencedDeclaration": 10,
                      "type": "struct HealthRecord.UserResult"
                    },
                    "id": 11,
                    "name": "UserDefinedTypeName",
                    "src": "295:10:0"
                  }
                ],
                "id": 12,
                "name": "VariableDeclaration",
                "src": "295:17:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "paid",
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 13,
                    "name": "ElementaryTypeName",
                    "src": "323:4:0"
                  }
                ],
                "id": 14,
                "name": "VariableDeclaration",
                "src": "323:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 15,
                    "name": "ElementaryTypeName",
                    "src": "343:7:0"
                  }
                ],
                "id": 16,
                "name": "VariableDeclaration",
                "src": "343:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "payableTo",
                  "scope": 19,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 17,
                    "name": "ElementaryTypeName",
                    "src": "368:7:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "368:17:0"
              }
            ],
            "id": 19,
            "name": "StructDefinition",
            "src": "259:144:0"
          },
          {
            "attributes": {
              "canonicalName": "HealthRecord.User",
              "name": "User",
              "scope": 427,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "scope": 28,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "437:7:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "437:19:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "results",
                  "scope": 28,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct HealthRecord.UserResult[]",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "struct HealthRecord.UserResult[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "UserResult",
                          "referencedDeclaration": 10,
                          "type": "struct HealthRecord.UserResult"
                        },
                        "id": 22,
                        "name": "UserDefinedTypeName",
                        "src": "467:10:0"
                      }
                    ],
                    "id": 23,
                    "name": "ArrayTypeName",
                    "src": "467:12:0"
                  }
                ],
                "id": 24,
                "name": "VariableDeclaration",
                "src": "467:20:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "pendingResult",
                  "scope": 28,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "struct HealthRecord.PendingTransaction[]",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "struct HealthRecord.PendingTransaction[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PendingTransaction",
                          "referencedDeclaration": 19,
                          "type": "struct HealthRecord.PendingTransaction"
                        },
                        "id": 25,
                        "name": "UserDefinedTypeName",
                        "src": "498:18:0"
                      }
                    ],
                    "id": 26,
                    "name": "ArrayTypeName",
                    "src": "498:20:0"
                  }
                ],
                "id": 27,
                "name": "VariableDeclaration",
                "src": "498:34:0"
              }
            ],
            "id": 28,
            "name": "StructDefinition",
            "src": "415:125:0"
          },
          {
            "attributes": {
              "canonicalName": "HealthRecord.ProviderUser",
              "name": "ProviderUser",
              "scope": 427,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "scope": 37,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 29,
                    "name": "ElementaryTypeName",
                    "src": "582:7:0"
                  }
                ],
                "id": 30,
                "name": "VariableDeclaration",
                "src": "582:19:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "location",
                  "scope": 37,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 31,
                    "name": "ElementaryTypeName",
                    "src": "612:6:0"
                  }
                ],
                "id": 32,
                "name": "VariableDeclaration",
                "src": "612:15:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "placeName",
                  "scope": 37,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 33,
                    "name": "ElementaryTypeName",
                    "src": "638:6:0"
                  }
                ],
                "id": 34,
                "name": "VariableDeclaration",
                "src": "638:16:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "isActive",
                  "scope": 37,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 35,
                    "name": "ElementaryTypeName",
                    "src": "665:4:0"
                  }
                ],
                "id": 36,
                "name": "VariableDeclaration",
                "src": "665:13:0"
              }
            ],
            "id": 37,
            "name": "StructDefinition",
            "src": "552:144:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "hospitalList",
              "scope": 427,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct HealthRecord.ProviderUser[]",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "struct HealthRecord.ProviderUser[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "ProviderUser",
                      "referencedDeclaration": 37,
                      "type": "struct HealthRecord.ProviderUser"
                    },
                    "id": 38,
                    "name": "UserDefinedTypeName",
                    "src": "872:12:0"
                  }
                ],
                "id": 39,
                "name": "ArrayTypeName",
                "src": "872:14:0"
              }
            ],
            "id": 40,
            "name": "VariableDeclaration",
            "src": "872:35:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "provider",
              "scope": 427,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct HealthRecord.ProviderUser)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct HealthRecord.ProviderUser)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 41,
                    "name": "ElementaryTypeName",
                    "src": "998:7:0"
                  },
                  {
                    "attributes": {
                      "name": "ProviderUser",
                      "referencedDeclaration": 37,
                      "type": "struct HealthRecord.ProviderUser"
                    },
                    "id": 42,
                    "name": "UserDefinedTypeName",
                    "src": "1009:12:0"
                  }
                ],
                "id": 43,
                "name": "Mapping",
                "src": "989:33:0"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "989:50:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "users",
              "scope": 427,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct HealthRecord.User)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct HealthRecord.User)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 45,
                    "name": "ElementaryTypeName",
                    "src": "1055:7:0"
                  },
                  {
                    "attributes": {
                      "name": "User",
                      "referencedDeclaration": 28,
                      "type": "struct HealthRecord.User"
                    },
                    "id": 46,
                    "name": "UserDefinedTypeName",
                    "src": "1067:4:0"
                  }
                ],
                "id": 47,
                "name": "Mapping",
                "src": "1046:26:0"
              }
            ],
            "id": 48,
            "name": "VariableDeclaration",
            "src": "1046:40:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 49,
                "name": "ParameterList",
                "src": "1144:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 50,
                "name": "ParameterList",
                "src": "1146:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "address",
                              "value": "contractOwner"
                            },
                            "id": 51,
                            "name": "Identifier",
                            "src": "1157:13:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 52,
                                "name": "Identifier",
                                "src": "1173:3:0"
                              }
                            ],
                            "id": 53,
                            "name": "MemberAccess",
                            "src": "1173:10:0"
                          }
                        ],
                        "id": 54,
                        "name": "Assignment",
                        "src": "1157:26:0"
                      }
                    ],
                    "id": 55,
                    "name": "ExpressionStatement",
                    "src": "1157:26:0"
                  }
                ],
                "id": 56,
                "name": "Block",
                "src": "1146:45:0"
              }
            ],
            "id": 57,
            "name": "FunctionDefinition",
            "src": "1132:59:0"
          },
          {
            "attributes": {
              "functionSelector": "2199d5cd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerUser",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user_",
                      "scope": 70,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 58,
                        "name": "ElementaryTypeName",
                        "src": "1242:7:0"
                      }
                    ],
                    "id": 59,
                    "name": "VariableDeclaration",
                    "src": "1242:13:0"
                  }
                ],
                "id": 60,
                "name": "ParameterList",
                "src": "1241:15:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 61,
                "name": "ParameterList",
                "src": "1263:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "userAddress",
                              "referencedDeclaration": 21,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.User storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 48,
                                      "type": "mapping(address => struct HealthRecord.User storage ref)",
                                      "value": "users"
                                    },
                                    "id": 62,
                                    "name": "Identifier",
                                    "src": "1315:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59,
                                      "type": "address",
                                      "value": "user_"
                                    },
                                    "id": 63,
                                    "name": "Identifier",
                                    "src": "1321:5:0"
                                  }
                                ],
                                "id": 64,
                                "name": "IndexAccess",
                                "src": "1315:12:0"
                              }
                            ],
                            "id": 65,
                            "name": "MemberAccess",
                            "src": "1315:24:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 59,
                              "type": "address",
                              "value": "user_"
                            },
                            "id": 66,
                            "name": "Identifier",
                            "src": "1342:5:0"
                          }
                        ],
                        "id": 67,
                        "name": "Assignment",
                        "src": "1315:32:0"
                      }
                    ],
                    "id": 68,
                    "name": "ExpressionStatement",
                    "src": "1315:32:0"
                  }
                ],
                "id": 69,
                "name": "Block",
                "src": "1263:102:0"
              }
            ],
            "id": 70,
            "name": "FunctionDefinition",
            "src": "1220:145:0"
          },
          {
            "attributes": {
              "functionSelector": "7b746864",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerKiosk",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "kiosk_",
                      "scope": 116,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 71,
                        "name": "ElementaryTypeName",
                        "src": "1406:7:0"
                      }
                    ],
                    "id": 72,
                    "name": "VariableDeclaration",
                    "src": "1406:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "location_",
                      "scope": 116,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 73,
                        "name": "ElementaryTypeName",
                        "src": "1422:6:0"
                      }
                    ],
                    "id": 74,
                    "name": "VariableDeclaration",
                    "src": "1422:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name_",
                      "scope": 116,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 75,
                        "name": "ElementaryTypeName",
                        "src": "1447:6:0"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclaration",
                    "src": "1447:19:0"
                  }
                ],
                "id": 77,
                "name": "ParameterList",
                "src": "1405:62:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 78,
                "name": "ParameterList",
                "src": "1474:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                                  "typeString": "literal_string \"Only contract owner can do this.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "1485:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 80,
                                    "name": "Identifier",
                                    "src": "1493:3:0"
                                  }
                                ],
                                "id": 81,
                                "name": "MemberAccess",
                                "src": "1493:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "address",
                                  "value": "contractOwner"
                                },
                                "id": 82,
                                "name": "Identifier",
                                "src": "1507:13:0"
                              }
                            ],
                            "id": 83,
                            "name": "BinaryOperation",
                            "src": "1493:27:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only contract owner can do this.\"",
                              "value": "Only contract owner can do this."
                            },
                            "id": 84,
                            "name": "Literal",
                            "src": "1522:34:0"
                          }
                        ],
                        "id": 85,
                        "name": "FunctionCall",
                        "src": "1485:72:0"
                      }
                    ],
                    "id": 86,
                    "name": "ExpressionStatement",
                    "src": "1485:72:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "userAddress",
                              "referencedDeclaration": 30,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 87,
                                    "name": "Identifier",
                                    "src": "1568:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 72,
                                      "type": "address",
                                      "value": "kiosk_"
                                    },
                                    "id": 88,
                                    "name": "Identifier",
                                    "src": "1577:6:0"
                                  }
                                ],
                                "id": 89,
                                "name": "IndexAccess",
                                "src": "1568:16:0"
                              }
                            ],
                            "id": 90,
                            "name": "MemberAccess",
                            "src": "1568:28:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 72,
                              "type": "address",
                              "value": "kiosk_"
                            },
                            "id": 91,
                            "name": "Identifier",
                            "src": "1599:6:0"
                          }
                        ],
                        "id": 92,
                        "name": "Assignment",
                        "src": "1568:37:0"
                      }
                    ],
                    "id": 93,
                    "name": "ExpressionStatement",
                    "src": "1568:37:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "location",
                              "referencedDeclaration": 32,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 94,
                                    "name": "Identifier",
                                    "src": "1616:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 72,
                                      "type": "address",
                                      "value": "kiosk_"
                                    },
                                    "id": 95,
                                    "name": "Identifier",
                                    "src": "1625:6:0"
                                  }
                                ],
                                "id": 96,
                                "name": "IndexAccess",
                                "src": "1616:16:0"
                              }
                            ],
                            "id": 97,
                            "name": "MemberAccess",
                            "src": "1616:25:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 74,
                              "type": "string memory",
                              "value": "location_"
                            },
                            "id": 98,
                            "name": "Identifier",
                            "src": "1644:9:0"
                          }
                        ],
                        "id": 99,
                        "name": "Assignment",
                        "src": "1616:37:0"
                      }
                    ],
                    "id": 100,
                    "name": "ExpressionStatement",
                    "src": "1616:37:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "placeName",
                              "referencedDeclaration": 34,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 101,
                                    "name": "Identifier",
                                    "src": "1664:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 72,
                                      "type": "address",
                                      "value": "kiosk_"
                                    },
                                    "id": 102,
                                    "name": "Identifier",
                                    "src": "1673:6:0"
                                  }
                                ],
                                "id": 103,
                                "name": "IndexAccess",
                                "src": "1664:16:0"
                              }
                            ],
                            "id": 104,
                            "name": "MemberAccess",
                            "src": "1664:26:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 76,
                              "type": "string memory",
                              "value": "name_"
                            },
                            "id": 105,
                            "name": "Identifier",
                            "src": "1693:5:0"
                          }
                        ],
                        "id": 106,
                        "name": "Assignment",
                        "src": "1664:34:0"
                      }
                    ],
                    "id": 107,
                    "name": "ExpressionStatement",
                    "src": "1664:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "isActive",
                              "referencedDeclaration": 36,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 108,
                                    "name": "Identifier",
                                    "src": "1709:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 72,
                                      "type": "address",
                                      "value": "kiosk_"
                                    },
                                    "id": 109,
                                    "name": "Identifier",
                                    "src": "1718:6:0"
                                  }
                                ],
                                "id": 110,
                                "name": "IndexAccess",
                                "src": "1709:16:0"
                              }
                            ],
                            "id": 111,
                            "name": "MemberAccess",
                            "src": "1709:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 112,
                            "name": "Literal",
                            "src": "1737:4:0"
                          }
                        ],
                        "id": 113,
                        "name": "Assignment",
                        "src": "1709:32:0"
                      }
                    ],
                    "id": 114,
                    "name": "ExpressionStatement",
                    "src": "1709:32:0"
                  }
                ],
                "id": 115,
                "name": "Block",
                "src": "1474:275:0"
              }
            ],
            "id": 116,
            "name": "FunctionDefinition",
            "src": "1383:366:0"
          },
          {
            "attributes": {
              "functionSelector": "49d41e83",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "registerHospital",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "hospital_",
                      "scope": 155,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 117,
                        "name": "ElementaryTypeName",
                        "src": "1787:7:0"
                      }
                    ],
                    "id": 118,
                    "name": "VariableDeclaration",
                    "src": "1787:17:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "location_",
                      "scope": 155,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 119,
                        "name": "ElementaryTypeName",
                        "src": "1806:6:0"
                      }
                    ],
                    "id": 120,
                    "name": "VariableDeclaration",
                    "src": "1806:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name_",
                      "scope": 155,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 121,
                        "name": "ElementaryTypeName",
                        "src": "1831:6:0"
                      }
                    ],
                    "id": 122,
                    "name": "VariableDeclaration",
                    "src": "1831:19:0"
                  }
                ],
                "id": 123,
                "name": "ParameterList",
                "src": "1786:65:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 124,
                "name": "ParameterList",
                "src": "1858:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                                  "typeString": "literal_string \"Only contract owner can do this.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 125,
                            "name": "Identifier",
                            "src": "1869:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 126,
                                    "name": "Identifier",
                                    "src": "1877:3:0"
                                  }
                                ],
                                "id": 127,
                                "name": "MemberAccess",
                                "src": "1877:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "address",
                                  "value": "contractOwner"
                                },
                                "id": 128,
                                "name": "Identifier",
                                "src": "1891:13:0"
                              }
                            ],
                            "id": 129,
                            "name": "BinaryOperation",
                            "src": "1877:27:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only contract owner can do this.\"",
                              "value": "Only contract owner can do this."
                            },
                            "id": 130,
                            "name": "Literal",
                            "src": "1906:34:0"
                          }
                        ],
                        "id": 131,
                        "name": "FunctionCall",
                        "src": "1869:72:0"
                      }
                    ],
                    "id": 132,
                    "name": "ExpressionStatement",
                    "src": "1869:72:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        134
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "hUser",
                          "scope": 154,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct HealthRecord.ProviderUser",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ProviderUser",
                              "referencedDeclaration": 37,
                              "type": "struct HealthRecord.ProviderUser"
                            },
                            "id": 133,
                            "name": "UserDefinedTypeName",
                            "src": "1952:12:0"
                          }
                        ],
                        "id": 134,
                        "name": "VariableDeclaration",
                        "src": "1952:25:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct HealthRecord.ProviderUser memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37,
                              "type": "type(struct HealthRecord.ProviderUser storage pointer)",
                              "value": "ProviderUser"
                            },
                            "id": 135,
                            "name": "Identifier",
                            "src": "1980:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 118,
                              "type": "address",
                              "value": "hospital_"
                            },
                            "id": 136,
                            "name": "Identifier",
                            "src": "1993:9:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 120,
                              "type": "string memory",
                              "value": "location_"
                            },
                            "id": 137,
                            "name": "Identifier",
                            "src": "2004:9:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 122,
                              "type": "string memory",
                              "value": "name_"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "2015:5:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 139,
                            "name": "Literal",
                            "src": "2022:4:0"
                          }
                        ],
                        "id": 140,
                        "name": "FunctionCall",
                        "src": "1980:47:0"
                      }
                    ],
                    "id": 141,
                    "name": "VariableDeclarationStatement",
                    "src": "1952:75:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct HealthRecord.ProviderUser storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct HealthRecord.ProviderUser storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                  "value": "provider"
                                },
                                "id": 142,
                                "name": "Identifier",
                                "src": "2038:8:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 118,
                                  "type": "address",
                                  "value": "hospital_"
                                },
                                "id": 143,
                                "name": "Identifier",
                                "src": "2047:9:0"
                              }
                            ],
                            "id": 144,
                            "name": "IndexAccess",
                            "src": "2038:19:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 134,
                              "type": "struct HealthRecord.ProviderUser memory",
                              "value": "hUser"
                            },
                            "id": 145,
                            "name": "Identifier",
                            "src": "2060:5:0"
                          }
                        ],
                        "id": 146,
                        "name": "Assignment",
                        "src": "2038:27:0"
                      }
                    ],
                    "id": 147,
                    "name": "ExpressionStatement",
                    "src": "2038:27:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ProviderUser_$37_memory_ptr",
                                  "typeString": "struct HealthRecord.ProviderUser memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct HealthRecord.ProviderUser storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "struct HealthRecord.ProviderUser storage ref[] storage ref",
                                  "value": "hospitalList"
                                },
                                "id": 148,
                                "name": "Identifier",
                                "src": "2076:12:0"
                              }
                            ],
                            "id": 150,
                            "name": "MemberAccess",
                            "src": "2076:17:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 134,
                              "type": "struct HealthRecord.ProviderUser memory",
                              "value": "hUser"
                            },
                            "id": 151,
                            "name": "Identifier",
                            "src": "2094:5:0"
                          }
                        ],
                        "id": 152,
                        "name": "FunctionCall",
                        "src": "2076:24:0"
                      }
                    ],
                    "id": 153,
                    "name": "ExpressionStatement",
                    "src": "2076:24:0"
                  }
                ],
                "id": 154,
                "name": "Block",
                "src": "1858:250:0"
              }
            ],
            "id": 155,
            "name": "FunctionDefinition",
            "src": "1761:347:0"
          },
          {
            "attributes": {
              "functionSelector": "8dc2fe98",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "disableProvider",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider_",
                      "scope": 176,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 156,
                        "name": "ElementaryTypeName",
                        "src": "2145:7:0"
                      }
                    ],
                    "id": 157,
                    "name": "VariableDeclaration",
                    "src": "2145:17:0"
                  }
                ],
                "id": 158,
                "name": "ParameterList",
                "src": "2144:19:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 159,
                "name": "ParameterList",
                "src": "2170:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c0fb512da196b689b42e04cc0812251d6d9d4c49234c4c41d44433c64339a21c",
                                  "typeString": "literal_string \"Only contract owner can do this.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 160,
                            "name": "Identifier",
                            "src": "2181:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 161,
                                    "name": "Identifier",
                                    "src": "2189:3:0"
                                  }
                                ],
                                "id": 162,
                                "name": "MemberAccess",
                                "src": "2189:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "address",
                                  "value": "contractOwner"
                                },
                                "id": 163,
                                "name": "Identifier",
                                "src": "2203:13:0"
                              }
                            ],
                            "id": 164,
                            "name": "BinaryOperation",
                            "src": "2189:27:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c7920636f6e7472616374206f776e65722063616e20646f20746869732e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only contract owner can do this.\"",
                              "value": "Only contract owner can do this."
                            },
                            "id": 165,
                            "name": "Literal",
                            "src": "2218:34:0"
                          }
                        ],
                        "id": 166,
                        "name": "FunctionCall",
                        "src": "2181:72:0"
                      }
                    ],
                    "id": 167,
                    "name": "ExpressionStatement",
                    "src": "2181:72:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "isActive",
                              "referencedDeclaration": 36,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 168,
                                    "name": "Identifier",
                                    "src": "2264:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 157,
                                      "type": "address",
                                      "value": "provider_"
                                    },
                                    "id": 169,
                                    "name": "Identifier",
                                    "src": "2273:9:0"
                                  }
                                ],
                                "id": 170,
                                "name": "IndexAccess",
                                "src": "2264:19:0"
                              }
                            ],
                            "id": 171,
                            "name": "MemberAccess",
                            "src": "2264:28:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 172,
                            "name": "Literal",
                            "src": "2295:5:0"
                          }
                        ],
                        "id": 173,
                        "name": "Assignment",
                        "src": "2264:36:0"
                      }
                    ],
                    "id": 174,
                    "name": "ExpressionStatement",
                    "src": "2264:36:0"
                  }
                ],
                "id": 175,
                "name": "Block",
                "src": "2170:138:0"
              }
            ],
            "id": 176,
            "name": "FunctionDefinition",
            "src": "2120:188:0"
          },
          {
            "attributes": {
              "functionSelector": "7583902f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getProviderInfo",
              "scope": 427,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider_",
                      "scope": 203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 177,
                        "name": "ElementaryTypeName",
                        "src": "2349:7:0"
                      }
                    ],
                    "id": 178,
                    "name": "VariableDeclaration",
                    "src": "2349:17:0"
                  }
                ],
                "id": 179,
                "name": "ParameterList",
                "src": "2348:19:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 203,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 180,
                        "name": "ElementaryTypeName",
                        "src": "2388:6:0"
                      }
                    ],
                    "id": 181,
                    "name": "VariableDeclaration",
                    "src": "2388:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 203,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 182,
                        "name": "ElementaryTypeName",
                        "src": "2403:6:0"
                      }
                    ],
                    "id": 183,
                    "name": "VariableDeclaration",
                    "src": "2403:13:0"
                  }
                ],
                "id": 184,
                "name": "ParameterList",
                "src": "2387:30:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 185,
                            "name": "Identifier",
                            "src": "2428:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "isActive",
                              "referencedDeclaration": 36,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 186,
                                    "name": "Identifier",
                                    "src": "2436:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 178,
                                      "type": "address",
                                      "value": "provider_"
                                    },
                                    "id": 187,
                                    "name": "Identifier",
                                    "src": "2445:9:0"
                                  }
                                ],
                                "id": 188,
                                "name": "IndexAccess",
                                "src": "2436:19:0"
                              }
                            ],
                            "id": 189,
                            "name": "MemberAccess",
                            "src": "2436:28:0"
                          }
                        ],
                        "id": 190,
                        "name": "FunctionCall",
                        "src": "2428:37:0"
                      }
                    ],
                    "id": 191,
                    "name": "ExpressionStatement",
                    "src": "2428:37:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 184
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string storage ref,string storage ref)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "placeName",
                              "referencedDeclaration": 34,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 192,
                                    "name": "Identifier",
                                    "src": "2497:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 178,
                                      "type": "address",
                                      "value": "provider_"
                                    },
                                    "id": 193,
                                    "name": "Identifier",
                                    "src": "2506:9:0"
                                  }
                                ],
                                "id": 194,
                                "name": "IndexAccess",
                                "src": "2497:19:0"
                              }
                            ],
                            "id": 195,
                            "name": "MemberAccess",
                            "src": "2497:29:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "location",
                              "referencedDeclaration": 32,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.ProviderUser storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 44,
                                      "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                      "value": "provider"
                                    },
                                    "id": 196,
                                    "name": "Identifier",
                                    "src": "2541:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 178,
                                      "type": "address",
                                      "value": "provider_"
                                    },
                                    "id": 197,
                                    "name": "Identifier",
                                    "src": "2550:9:0"
                                  }
                                ],
                                "id": 198,
                                "name": "IndexAccess",
                                "src": "2541:19:0"
                              }
                            ],
                            "id": 199,
                            "name": "MemberAccess",
                            "src": "2541:28:0"
                          }
                        ],
                        "id": 200,
                        "name": "TupleExpression",
                        "src": "2482:102:0"
                      }
                    ],
                    "id": 201,
                    "name": "Return",
                    "src": "2476:108:0"
                  }
                ],
                "id": 202,
                "name": "Block",
                "src": "2417:185:0"
              }
            ],
            "id": 203,
            "name": "FunctionDefinition",
            "src": "2324:278:0"
          },
          {
            "attributes": {
              "functionSelector": "43a1489d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addHealthRecord",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "endUser",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 204,
                        "name": "ElementaryTypeName",
                        "src": "2672:7:0"
                      }
                    ],
                    "id": 205,
                    "name": "VariableDeclaration",
                    "src": "2672:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "testresult_",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 206,
                        "name": "ElementaryTypeName",
                        "src": "2689:6:0"
                      }
                    ],
                    "id": 207,
                    "name": "VariableDeclaration",
                    "src": "2689:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "temp_",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 208,
                        "name": "ElementaryTypeName",
                        "src": "2716:6:0"
                      }
                    ],
                    "id": 209,
                    "name": "VariableDeclaration",
                    "src": "2716:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "place_",
                      "scope": 241,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 210,
                        "name": "ElementaryTypeName",
                        "src": "2737:6:0"
                      }
                    ],
                    "id": 211,
                    "name": "VariableDeclaration",
                    "src": "2737:20:0"
                  }
                ],
                "id": 212,
                "name": "ParameterList",
                "src": "2671:87:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 213,
                "name": "ParameterList",
                "src": "2765:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 214,
                            "name": "Identifier",
                            "src": "2776:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isActive",
                                  "referencedDeclaration": 36,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.ProviderUser storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                          "value": "provider"
                                        },
                                        "id": 215,
                                        "name": "Identifier",
                                        "src": "2784:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 216,
                                            "name": "Identifier",
                                            "src": "2793:3:0"
                                          }
                                        ],
                                        "id": 217,
                                        "name": "MemberAccess",
                                        "src": "2793:10:0"
                                      }
                                    ],
                                    "id": 218,
                                    "name": "IndexAccess",
                                    "src": "2784:20:0"
                                  }
                                ],
                                "id": 219,
                                "name": "MemberAccess",
                                "src": "2784:29:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 220,
                                "name": "Literal",
                                "src": "2817:4:0"
                              }
                            ],
                            "id": 221,
                            "name": "BinaryOperation",
                            "src": "2784:37:0"
                          }
                        ],
                        "id": 222,
                        "name": "FunctionCall",
                        "src": "2776:46:0"
                      }
                    ],
                    "id": 223,
                    "name": "ExpressionStatement",
                    "src": "2776:46:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        225
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "result_",
                          "scope": 240,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct HealthRecord.UserResult",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "UserResult",
                              "referencedDeclaration": 10,
                              "type": "struct HealthRecord.UserResult"
                            },
                            "id": 224,
                            "name": "UserDefinedTypeName",
                            "src": "2833:10:0"
                          }
                        ],
                        "id": 225,
                        "name": "VariableDeclaration",
                        "src": "2833:25:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct HealthRecord.UserResult memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10,
                              "type": "type(struct HealthRecord.UserResult storage pointer)",
                              "value": "UserResult"
                            },
                            "id": 226,
                            "name": "Identifier",
                            "src": "2861:10:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 207,
                              "type": "string memory",
                              "value": "testresult_"
                            },
                            "id": 227,
                            "name": "Identifier",
                            "src": "2872:11:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 209,
                              "type": "string memory",
                              "value": "temp_"
                            },
                            "id": 228,
                            "name": "Identifier",
                            "src": "2885:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 211,
                              "type": "string memory",
                              "value": "place_"
                            },
                            "id": 229,
                            "name": "Identifier",
                            "src": "2892:6:0"
                          }
                        ],
                        "id": 230,
                        "name": "FunctionCall",
                        "src": "2861:38:0"
                      }
                    ],
                    "id": 231,
                    "name": "VariableDeclarationStatement",
                    "src": "2833:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                                  "typeString": "struct HealthRecord.UserResult memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct HealthRecord.UserResult storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "results",
                                  "referencedDeclaration": 24,
                                  "type": "struct HealthRecord.UserResult storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.User storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 48,
                                          "type": "mapping(address => struct HealthRecord.User storage ref)",
                                          "value": "users"
                                        },
                                        "id": 232,
                                        "name": "Identifier",
                                        "src": "2910:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 205,
                                          "type": "address",
                                          "value": "endUser"
                                        },
                                        "id": 233,
                                        "name": "Identifier",
                                        "src": "2916:7:0"
                                      }
                                    ],
                                    "id": 234,
                                    "name": "IndexAccess",
                                    "src": "2910:14:0"
                                  }
                                ],
                                "id": 235,
                                "name": "MemberAccess",
                                "src": "2910:22:0"
                              }
                            ],
                            "id": 236,
                            "name": "MemberAccess",
                            "src": "2910:27:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "struct HealthRecord.UserResult memory",
                              "value": "result_"
                            },
                            "id": 237,
                            "name": "Identifier",
                            "src": "2938:7:0"
                          }
                        ],
                        "id": 238,
                        "name": "FunctionCall",
                        "src": "2910:36:0"
                      }
                    ],
                    "id": 239,
                    "name": "ExpressionStatement",
                    "src": "2910:36:0"
                  }
                ],
                "id": 240,
                "name": "Block",
                "src": "2765:189:0"
              }
            ],
            "id": 241,
            "name": "FunctionDefinition",
            "src": "2647:307:0"
          },
          {
            "attributes": {
              "functionSelector": "427c3868",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getHealthRecord",
              "scope": 427,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "count_",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 242,
                        "name": "ElementaryTypeName",
                        "src": "3017:4:0"
                      }
                    ],
                    "id": 243,
                    "name": "VariableDeclaration",
                    "src": "3017:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user_",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 244,
                        "name": "ElementaryTypeName",
                        "src": "3031:7:0"
                      }
                    ],
                    "id": 245,
                    "name": "VariableDeclaration",
                    "src": "3031:13:0"
                  }
                ],
                "id": 246,
                "name": "ParameterList",
                "src": "3016:29:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 247,
                        "name": "ElementaryTypeName",
                        "src": "3066:6:0"
                      }
                    ],
                    "id": 248,
                    "name": "VariableDeclaration",
                    "src": "3066:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 271,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 249,
                        "name": "ElementaryTypeName",
                        "src": "3082:6:0"
                      }
                    ],
                    "id": 250,
                    "name": "VariableDeclaration",
                    "src": "3082:13:0"
                  }
                ],
                "id": 251,
                "name": "ParameterList",
                "src": "3065:31:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 251
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string storage ref,string storage ref)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "testResult",
                              "referencedDeclaration": 5,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "result",
                                  "referencedDeclaration": 12,
                                  "type": "struct HealthRecord.UserResult storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.PendingTransaction storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "pendingResult",
                                          "referencedDeclaration": 27,
                                          "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct HealthRecord.User storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 48,
                                                  "type": "mapping(address => struct HealthRecord.User storage ref)",
                                                  "value": "users"
                                                },
                                                "id": 252,
                                                "name": "Identifier",
                                                "src": "3115:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 245,
                                                  "type": "address",
                                                  "value": "user_"
                                                },
                                                "id": 253,
                                                "name": "Identifier",
                                                "src": "3121:5:0"
                                              }
                                            ],
                                            "id": 254,
                                            "name": "IndexAccess",
                                            "src": "3115:12:0"
                                          }
                                        ],
                                        "id": 255,
                                        "name": "MemberAccess",
                                        "src": "3115:26:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 243,
                                          "type": "uint256",
                                          "value": "count_"
                                        },
                                        "id": 256,
                                        "name": "Identifier",
                                        "src": "3142:6:0"
                                      }
                                    ],
                                    "id": 257,
                                    "name": "IndexAccess",
                                    "src": "3115:34:0"
                                  }
                                ],
                                "id": 258,
                                "name": "MemberAccess",
                                "src": "3115:41:0"
                              }
                            ],
                            "id": 259,
                            "name": "MemberAccess",
                            "src": "3115:52:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "place",
                              "referencedDeclaration": 9,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "result",
                                  "referencedDeclaration": 12,
                                  "type": "struct HealthRecord.UserResult storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.PendingTransaction storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "pendingResult",
                                          "referencedDeclaration": 27,
                                          "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct HealthRecord.User storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 48,
                                                  "type": "mapping(address => struct HealthRecord.User storage ref)",
                                                  "value": "users"
                                                },
                                                "id": 260,
                                                "name": "Identifier",
                                                "src": "3169:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 245,
                                                  "type": "address",
                                                  "value": "user_"
                                                },
                                                "id": 261,
                                                "name": "Identifier",
                                                "src": "3175:5:0"
                                              }
                                            ],
                                            "id": 262,
                                            "name": "IndexAccess",
                                            "src": "3169:12:0"
                                          }
                                        ],
                                        "id": 263,
                                        "name": "MemberAccess",
                                        "src": "3169:26:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 243,
                                          "type": "uint256",
                                          "value": "count_"
                                        },
                                        "id": 264,
                                        "name": "Identifier",
                                        "src": "3196:6:0"
                                      }
                                    ],
                                    "id": 265,
                                    "name": "IndexAccess",
                                    "src": "3169:34:0"
                                  }
                                ],
                                "id": 266,
                                "name": "MemberAccess",
                                "src": "3169:41:0"
                              }
                            ],
                            "id": 267,
                            "name": "MemberAccess",
                            "src": "3169:47:0"
                          }
                        ],
                        "id": 268,
                        "name": "TupleExpression",
                        "src": "3114:104:0"
                      }
                    ],
                    "id": 269,
                    "name": "Return",
                    "src": "3107:111:0"
                  }
                ],
                "id": 270,
                "name": "Block",
                "src": "3096:130:0"
              }
            ],
            "id": 271,
            "name": "FunctionDefinition",
            "src": "2992:234:0"
          },
          {
            "attributes": {
              "functionSelector": "6e46b521",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addPendingHealthRecord",
              "scope": 427,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "testResult_",
                      "scope": 321,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 272,
                        "name": "ElementaryTypeName",
                        "src": "3300:6:0"
                      }
                    ],
                    "id": 273,
                    "name": "VariableDeclaration",
                    "src": "3300:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "date_",
                      "scope": 321,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 274,
                        "name": "ElementaryTypeName",
                        "src": "3327:6:0"
                      }
                    ],
                    "id": 275,
                    "name": "VariableDeclaration",
                    "src": "3327:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "place_",
                      "scope": 321,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 276,
                        "name": "ElementaryTypeName",
                        "src": "3348:6:0"
                      }
                    ],
                    "id": 277,
                    "name": "VariableDeclaration",
                    "src": "3348:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "endUser",
                      "scope": 321,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 278,
                        "name": "ElementaryTypeName",
                        "src": "3371:7:0"
                      }
                    ],
                    "id": 279,
                    "name": "VariableDeclaration",
                    "src": "3371:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount_",
                      "scope": 321,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 280,
                        "name": "ElementaryTypeName",
                        "src": "3388:7:0"
                      }
                    ],
                    "id": 281,
                    "name": "VariableDeclaration",
                    "src": "3388:15:0"
                  }
                ],
                "id": 282,
                "name": "ParameterList",
                "src": "3299:105:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 283,
                "name": "ParameterList",
                "src": "3411:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 284,
                            "name": "Identifier",
                            "src": "3422:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isActive",
                                  "referencedDeclaration": 36,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.ProviderUser storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "mapping(address => struct HealthRecord.ProviderUser storage ref)",
                                          "value": "provider"
                                        },
                                        "id": 285,
                                        "name": "Identifier",
                                        "src": "3430:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 286,
                                            "name": "Identifier",
                                            "src": "3439:3:0"
                                          }
                                        ],
                                        "id": 287,
                                        "name": "MemberAccess",
                                        "src": "3439:10:0"
                                      }
                                    ],
                                    "id": 288,
                                    "name": "IndexAccess",
                                    "src": "3430:20:0"
                                  }
                                ],
                                "id": 289,
                                "name": "MemberAccess",
                                "src": "3430:29:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 290,
                                "name": "Literal",
                                "src": "3463:4:0"
                              }
                            ],
                            "id": 291,
                            "name": "BinaryOperation",
                            "src": "3430:37:0"
                          }
                        ],
                        "id": 292,
                        "name": "FunctionCall",
                        "src": "3422:47:0"
                      }
                    ],
                    "id": 293,
                    "name": "ExpressionStatement",
                    "src": "3422:47:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        295
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "resultData",
                          "scope": 320,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct HealthRecord.UserResult",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "UserResult",
                              "referencedDeclaration": 10,
                              "type": "struct HealthRecord.UserResult"
                            },
                            "id": 294,
                            "name": "UserDefinedTypeName",
                            "src": "3480:10:0"
                          }
                        ],
                        "id": 295,
                        "name": "VariableDeclaration",
                        "src": "3480:28:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct HealthRecord.UserResult memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10,
                              "type": "type(struct HealthRecord.UserResult storage pointer)",
                              "value": "UserResult"
                            },
                            "id": 296,
                            "name": "Identifier",
                            "src": "3511:10:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 273,
                              "type": "string memory",
                              "value": "testResult_"
                            },
                            "id": 297,
                            "name": "Identifier",
                            "src": "3522:11:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 275,
                              "type": "string memory",
                              "value": "date_"
                            },
                            "id": 298,
                            "name": "Identifier",
                            "src": "3535:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 277,
                              "type": "string memory",
                              "value": "place_"
                            },
                            "id": 299,
                            "name": "Identifier",
                            "src": "3542:6:0"
                          }
                        ],
                        "id": 300,
                        "name": "FunctionCall",
                        "src": "3511:38:0"
                      }
                    ],
                    "id": 301,
                    "name": "VariableDeclarationStatement",
                    "src": "3480:69:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        303
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "pendingResult_",
                          "scope": 320,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct HealthRecord.PendingTransaction",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "PendingTransaction",
                              "referencedDeclaration": 19,
                              "type": "struct HealthRecord.PendingTransaction"
                            },
                            "id": 302,
                            "name": "UserDefinedTypeName",
                            "src": "3560:18:0"
                          }
                        ],
                        "id": 303,
                        "name": "VariableDeclaration",
                        "src": "3560:40:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct HealthRecord.PendingTransaction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserResult_$10_memory_ptr",
                                  "typeString": "struct HealthRecord.UserResult memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 19,
                              "type": "type(struct HealthRecord.PendingTransaction storage pointer)",
                              "value": "PendingTransaction"
                            },
                            "id": 304,
                            "name": "Identifier",
                            "src": "3603:18:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 295,
                              "type": "struct HealthRecord.UserResult memory",
                              "value": "resultData"
                            },
                            "id": 305,
                            "name": "Identifier",
                            "src": "3622:10:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 306,
                            "name": "Literal",
                            "src": "3634:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 281,
                              "type": "uint256",
                              "value": "amount_"
                            },
                            "id": 307,
                            "name": "Identifier",
                            "src": "3641:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 308,
                                "name": "Identifier",
                                "src": "3650:3:0"
                              }
                            ],
                            "id": 309,
                            "name": "MemberAccess",
                            "src": "3650:10:0"
                          }
                        ],
                        "id": 310,
                        "name": "FunctionCall",
                        "src": "3603:58:0"
                      }
                    ],
                    "id": 311,
                    "name": "VariableDeclarationStatement",
                    "src": "3560:101:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_PendingTransaction_$19_memory_ptr",
                                  "typeString": "struct HealthRecord.PendingTransaction memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct HealthRecord.PendingTransaction storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "pendingResult",
                                  "referencedDeclaration": 27,
                                  "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.User storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 48,
                                          "type": "mapping(address => struct HealthRecord.User storage ref)",
                                          "value": "users"
                                        },
                                        "id": 312,
                                        "name": "Identifier",
                                        "src": "3672:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 279,
                                          "type": "address",
                                          "value": "endUser"
                                        },
                                        "id": 313,
                                        "name": "Identifier",
                                        "src": "3678:7:0"
                                      }
                                    ],
                                    "id": 314,
                                    "name": "IndexAccess",
                                    "src": "3672:14:0"
                                  }
                                ],
                                "id": 315,
                                "name": "MemberAccess",
                                "src": "3672:28:0"
                              }
                            ],
                            "id": 316,
                            "name": "MemberAccess",
                            "src": "3672:33:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 303,
                              "type": "struct HealthRecord.PendingTransaction memory",
                              "value": "pendingResult_"
                            },
                            "id": 317,
                            "name": "Identifier",
                            "src": "3706:14:0"
                          }
                        ],
                        "id": 318,
                        "name": "FunctionCall",
                        "src": "3672:49:0"
                      }
                    ],
                    "id": 319,
                    "name": "ExpressionStatement",
                    "src": "3672:49:0"
                  }
                ],
                "id": 320,
                "name": "Block",
                "src": "3411:330:0"
              }
            ],
            "id": 321,
            "name": "FunctionDefinition",
            "src": "3268:473:0"
          },
          {
            "attributes": {
              "functionSelector": "7125b6f1",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPendingHealthRecord",
              "scope": 427,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "count_",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 322,
                        "name": "ElementaryTypeName",
                        "src": "3811:4:0"
                      }
                    ],
                    "id": 323,
                    "name": "VariableDeclaration",
                    "src": "3811:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user_",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 324,
                        "name": "ElementaryTypeName",
                        "src": "3824:7:0"
                      }
                    ],
                    "id": 325,
                    "name": "VariableDeclaration",
                    "src": "3824:13:0"
                  }
                ],
                "id": 326,
                "name": "ParameterList",
                "src": "3810:28:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 327,
                        "name": "ElementaryTypeName",
                        "src": "3859:6:0"
                      }
                    ],
                    "id": 328,
                    "name": "VariableDeclaration",
                    "src": "3859:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 329,
                        "name": "ElementaryTypeName",
                        "src": "3874:6:0"
                      }
                    ],
                    "id": 330,
                    "name": "VariableDeclaration",
                    "src": "3874:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 331,
                        "name": "ElementaryTypeName",
                        "src": "3889:6:0"
                      }
                    ],
                    "id": 332,
                    "name": "VariableDeclaration",
                    "src": "3889:13:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 333,
                        "name": "ElementaryTypeName",
                        "src": "3904:7:0"
                      }
                    ],
                    "id": 334,
                    "name": "VariableDeclaration",
                    "src": "3904:7:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 335,
                        "name": "ElementaryTypeName",
                        "src": "3913:4:0"
                      }
                    ],
                    "id": 336,
                    "name": "VariableDeclaration",
                    "src": "3913:4:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 395,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 337,
                        "name": "ElementaryTypeName",
                        "src": "3919:7:0"
                      }
                    ],
                    "id": 338,
                    "name": "VariableDeclaration",
                    "src": "3919:7:0"
                  }
                ],
                "id": 339,
                "name": "ParameterList",
                "src": "3858:71:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 340,
                            "name": "Identifier",
                            "src": "3940:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 341,
                                    "name": "Identifier",
                                    "src": "3948:3:0"
                                  }
                                ],
                                "id": 342,
                                "name": "MemberAccess",
                                "src": "3948:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 325,
                                  "type": "address",
                                  "value": "user_"
                                },
                                "id": 343,
                                "name": "Identifier",
                                "src": "3962:5:0"
                              }
                            ],
                            "id": 344,
                            "name": "BinaryOperation",
                            "src": "3948:19:0"
                          }
                        ],
                        "id": 345,
                        "name": "FunctionCall",
                        "src": "3940:28:0"
                      }
                    ],
                    "id": 346,
                    "name": "ExpressionStatement",
                    "src": "3940:28:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 339
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string storage ref,string storage ref,string storage ref,uint256,bool,address)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "testResult",
                              "referencedDeclaration": 5,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "result",
                                  "referencedDeclaration": 12,
                                  "type": "struct HealthRecord.UserResult storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.PendingTransaction storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "pendingResult",
                                          "referencedDeclaration": 27,
                                          "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct HealthRecord.User storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 48,
                                                  "type": "mapping(address => struct HealthRecord.User storage ref)",
                                                  "value": "users"
                                                },
                                                "id": 347,
                                                "name": "Identifier",
                                                "src": "3987:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 325,
                                                  "type": "address",
                                                  "value": "user_"
                                                },
                                                "id": 348,
                                                "name": "Identifier",
                                                "src": "3993:5:0"
                                              }
                                            ],
                                            "id": 349,
                                            "name": "IndexAccess",
                                            "src": "3987:12:0"
                                          }
                                        ],
                                        "id": 350,
                                        "name": "MemberAccess",
                                        "src": "3987:26:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 323,
                                          "type": "uint256",
                                          "value": "count_"
                                        },
                                        "id": 351,
                                        "name": "Identifier",
                                        "src": "4014:6:0"
                                      }
                                    ],
                                    "id": 352,
                                    "name": "IndexAccess",
                                    "src": "3987:34:0"
                                  }
                                ],
                                "id": 353,
                                "name": "MemberAccess",
                                "src": "3987:41:0"
                              }
                            ],
                            "id": 354,
                            "name": "MemberAccess",
                            "src": "3987:52:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "date",
                              "referencedDeclaration": 7,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "result",
                                  "referencedDeclaration": 12,
                                  "type": "struct HealthRecord.UserResult storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.PendingTransaction storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "pendingResult",
                                          "referencedDeclaration": 27,
                                          "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct HealthRecord.User storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 48,
                                                  "type": "mapping(address => struct HealthRecord.User storage ref)",
                                                  "value": "users"
                                                },
                                                "id": 355,
                                                "name": "Identifier",
                                                "src": "4059:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 325,
                                                  "type": "address",
                                                  "value": "user_"
                                                },
                                                "id": 356,
                                                "name": "Identifier",
                                                "src": "4065:5:0"
                                              }
                                            ],
                                            "id": 357,
                                            "name": "IndexAccess",
                                            "src": "4059:12:0"
                                          }
                                        ],
                                        "id": 358,
                                        "name": "MemberAccess",
                                        "src": "4059:26:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 323,
                                          "type": "uint256",
                                          "value": "count_"
                                        },
                                        "id": 359,
                                        "name": "Identifier",
                                        "src": "4086:6:0"
                                      }
                                    ],
                                    "id": 360,
                                    "name": "IndexAccess",
                                    "src": "4059:34:0"
                                  }
                                ],
                                "id": 361,
                                "name": "MemberAccess",
                                "src": "4059:41:0"
                              }
                            ],
                            "id": 362,
                            "name": "MemberAccess",
                            "src": "4059:46:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "place",
                              "referencedDeclaration": 9,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "result",
                                  "referencedDeclaration": 12,
                                  "type": "struct HealthRecord.UserResult storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.PendingTransaction storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "pendingResult",
                                          "referencedDeclaration": 27,
                                          "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct HealthRecord.User storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 48,
                                                  "type": "mapping(address => struct HealthRecord.User storage ref)",
                                                  "value": "users"
                                                },
                                                "id": 363,
                                                "name": "Identifier",
                                                "src": "4126:5:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 325,
                                                  "type": "address",
                                                  "value": "user_"
                                                },
                                                "id": 364,
                                                "name": "Identifier",
                                                "src": "4132:5:0"
                                              }
                                            ],
                                            "id": 365,
                                            "name": "IndexAccess",
                                            "src": "4126:12:0"
                                          }
                                        ],
                                        "id": 366,
                                        "name": "MemberAccess",
                                        "src": "4126:26:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 323,
                                          "type": "uint256",
                                          "value": "count_"
                                        },
                                        "id": 367,
                                        "name": "Identifier",
                                        "src": "4153:6:0"
                                      }
                                    ],
                                    "id": 368,
                                    "name": "IndexAccess",
                                    "src": "4126:34:0"
                                  }
                                ],
                                "id": 369,
                                "name": "MemberAccess",
                                "src": "4126:41:0"
                              }
                            ],
                            "id": 370,
                            "name": "MemberAccess",
                            "src": "4126:47:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "amount",
                              "referencedDeclaration": 16,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.PendingTransaction storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "pendingResult",
                                      "referencedDeclaration": 27,
                                      "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct HealthRecord.User storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 48,
                                              "type": "mapping(address => struct HealthRecord.User storage ref)",
                                              "value": "users"
                                            },
                                            "id": 371,
                                            "name": "Identifier",
                                            "src": "4192:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 325,
                                              "type": "address",
                                              "value": "user_"
                                            },
                                            "id": 372,
                                            "name": "Identifier",
                                            "src": "4198:5:0"
                                          }
                                        ],
                                        "id": 373,
                                        "name": "IndexAccess",
                                        "src": "4192:12:0"
                                      }
                                    ],
                                    "id": 374,
                                    "name": "MemberAccess",
                                    "src": "4192:26:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 323,
                                      "type": "uint256",
                                      "value": "count_"
                                    },
                                    "id": 375,
                                    "name": "Identifier",
                                    "src": "4219:6:0"
                                  }
                                ],
                                "id": 376,
                                "name": "IndexAccess",
                                "src": "4192:34:0"
                              }
                            ],
                            "id": 377,
                            "name": "MemberAccess",
                            "src": "4192:41:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "paid",
                              "referencedDeclaration": 14,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.PendingTransaction storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "pendingResult",
                                      "referencedDeclaration": 27,
                                      "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct HealthRecord.User storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 48,
                                              "type": "mapping(address => struct HealthRecord.User storage ref)",
                                              "value": "users"
                                            },
                                            "id": 378,
                                            "name": "Identifier",
                                            "src": "4252:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 325,
                                              "type": "address",
                                              "value": "user_"
                                            },
                                            "id": 379,
                                            "name": "Identifier",
                                            "src": "4258:5:0"
                                          }
                                        ],
                                        "id": 380,
                                        "name": "IndexAccess",
                                        "src": "4252:12:0"
                                      }
                                    ],
                                    "id": 381,
                                    "name": "MemberAccess",
                                    "src": "4252:26:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 323,
                                      "type": "uint256",
                                      "value": "count_"
                                    },
                                    "id": 382,
                                    "name": "Identifier",
                                    "src": "4279:6:0"
                                  }
                                ],
                                "id": 383,
                                "name": "IndexAccess",
                                "src": "4252:34:0"
                              }
                            ],
                            "id": 384,
                            "name": "MemberAccess",
                            "src": "4252:39:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "payableTo",
                              "referencedDeclaration": 18,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct HealthRecord.PendingTransaction storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "pendingResult",
                                      "referencedDeclaration": 27,
                                      "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct HealthRecord.User storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 48,
                                              "type": "mapping(address => struct HealthRecord.User storage ref)",
                                              "value": "users"
                                            },
                                            "id": 385,
                                            "name": "Identifier",
                                            "src": "4310:5:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 325,
                                              "type": "address",
                                              "value": "user_"
                                            },
                                            "id": 386,
                                            "name": "Identifier",
                                            "src": "4316:5:0"
                                          }
                                        ],
                                        "id": 387,
                                        "name": "IndexAccess",
                                        "src": "4310:12:0"
                                      }
                                    ],
                                    "id": 388,
                                    "name": "MemberAccess",
                                    "src": "4310:26:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 323,
                                      "type": "uint256",
                                      "value": "count_"
                                    },
                                    "id": 389,
                                    "name": "Identifier",
                                    "src": "4337:6:0"
                                  }
                                ],
                                "id": 390,
                                "name": "IndexAccess",
                                "src": "4310:34:0"
                              }
                            ],
                            "id": 391,
                            "name": "MemberAccess",
                            "src": "4310:44:0"
                          }
                        ],
                        "id": 392,
                        "name": "TupleExpression",
                        "src": "3986:397:0"
                      }
                    ],
                    "id": 393,
                    "name": "Return",
                    "src": "3979:404:0"
                  }
                ],
                "id": 394,
                "name": "Block",
                "src": "3929:462:0"
              }
            ],
            "id": 395,
            "name": "FunctionDefinition",
            "src": "3779:612:0"
          },
          {
            "attributes": {
              "functionSelector": "f559b2b2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPendingHealthRecordLength",
              "scope": 427,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user_",
                      "scope": 417,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 396,
                        "name": "ElementaryTypeName",
                        "src": "4448:7:0"
                      }
                    ],
                    "id": 397,
                    "name": "VariableDeclaration",
                    "src": "4448:13:0"
                  }
                ],
                "id": 398,
                "name": "ParameterList",
                "src": "4447:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 417,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 399,
                        "name": "ElementaryTypeName",
                        "src": "4484:7:0"
                      }
                    ],
                    "id": 400,
                    "name": "VariableDeclaration",
                    "src": "4484:7:0"
                  }
                ],
                "id": 401,
                "name": "ParameterList",
                "src": "4483:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 402,
                            "name": "Identifier",
                            "src": "4503:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 403,
                                    "name": "Identifier",
                                    "src": "4511:3:0"
                                  }
                                ],
                                "id": 404,
                                "name": "MemberAccess",
                                "src": "4511:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 397,
                                  "type": "address",
                                  "value": "user_"
                                },
                                "id": 405,
                                "name": "Identifier",
                                "src": "4525:5:0"
                              }
                            ],
                            "id": 406,
                            "name": "BinaryOperation",
                            "src": "4511:19:0"
                          }
                        ],
                        "id": 407,
                        "name": "FunctionCall",
                        "src": "4503:28:0"
                      }
                    ],
                    "id": 408,
                    "name": "ExpressionStatement",
                    "src": "4503:28:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 401
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "pendingResult",
                                  "referencedDeclaration": 27,
                                  "type": "struct HealthRecord.PendingTransaction storage ref[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct HealthRecord.User storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 48,
                                          "type": "mapping(address => struct HealthRecord.User storage ref)",
                                          "value": "users"
                                        },
                                        "id": 409,
                                        "name": "Identifier",
                                        "src": "4549:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 397,
                                          "type": "address",
                                          "value": "user_"
                                        },
                                        "id": 410,
                                        "name": "Identifier",
                                        "src": "4555:5:0"
                                      }
                                    ],
                                    "id": 411,
                                    "name": "IndexAccess",
                                    "src": "4549:12:0"
                                  }
                                ],
                                "id": 412,
                                "name": "MemberAccess",
                                "src": "4549:26:0"
                              }
                            ],
                            "id": 413,
                            "name": "MemberAccess",
                            "src": "4549:33:0"
                          }
                        ],
                        "id": 414,
                        "name": "TupleExpression",
                        "src": "4548:35:0"
                      }
                    ],
                    "id": 415,
                    "name": "Return",
                    "src": "4542:41:0"
                  }
                ],
                "id": 416,
                "name": "Block",
                "src": "4492:99:0"
              }
            ],
            "id": 417,
            "name": "FunctionDefinition",
            "src": "4409:182:0"
          },
          {
            "attributes": {
              "functionSelector": "893d20e8",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOwner",
              "scope": 427,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 418,
                "name": "ParameterList",
                "src": "4632:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 426,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 419,
                        "name": "ElementaryTypeName",
                        "src": "4656:7:0"
                      }
                    ],
                    "id": 420,
                    "name": "VariableDeclaration",
                    "src": "4656:7:0"
                  }
                ],
                "id": 421,
                "name": "ParameterList",
                "src": "4655:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 421
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "address",
                              "value": "contractOwner"
                            },
                            "id": 422,
                            "name": "Identifier",
                            "src": "4682:13:0"
                          }
                        ],
                        "id": 423,
                        "name": "TupleExpression",
                        "src": "4681:15:0"
                      }
                    ],
                    "id": 424,
                    "name": "Return",
                    "src": "4675:21:0"
                  }
                ],
                "id": 425,
                "name": "Block",
                "src": "4664:40:0"
              }
            ],
            "id": 426,
            "name": "FunctionDefinition",
            "src": "4615:89:0"
          }
        ],
        "id": 427,
        "name": "ContractDefinition",
        "src": "73:4658:0"
      }
    ],
    "id": 428,
    "name": "SourceUnit",
    "src": "37:4694:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x885ccFe7AfEc0a6382fceb1E32520eD0B02d8654",
      "transactionHash": "0xcd34718594df79438caecdcf685a3f43060f5327e50de4c728d046a4ab58fe1f"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-15T21:33:44.790Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}